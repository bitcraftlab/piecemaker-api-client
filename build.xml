<project name="PieceMakerLib" default="install" basedir="./">

	<!--- + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
	
		PieceMaker API for Java/Processing and JS

		https://github.com/fjenett/piecemaker-api-client
	
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
		SETTINGS
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + -->
	
	<property name="src" 		value="src" 			/>
	<property name="build" 		value="build" 			/>
	<property name="bin" 		value="bin" 			/>
	<property name="dist" 		value="dist" 			/>
	<property name="docs" 		value="docs" 			/>
	<property name="lib.name" 	value="PieceMakerLib" 	/>
	<property name="author"		value="Florian Jenett" 	/>
	<property name="client"		value="Motion Bank" 	/>
	<property name="version" 	value="0.0.1" 			/>
	<property name="java.target.version" 
								value="1.5" 			/>
	
	<!--property name="processing.classes" location="/Applications/Processing.app/Contents/Resources/Java/"/-->
	<property name="processing.classes" 
			  location="/Users/fjenett/Repos/processing/build/macosx/work/Processing.app/Contents/Resources/Java/"/>

	<property name="processing.libs" 
			  location="/Users/fjenett/Documents/Processing/libraries"/>

	<path id="library-classpath">
		<fileset dir="${processing.classes}" >
			<include name="core.jar"/>
		</fileset>
		<fileset dir="external">
			<include name="commons-codec-1.3.jar" />
			<include name="commons-httpclient-3.1.jar" />
			<include name="commons-logging-1.1.jar" />
			<include name="commons-validator-1.4.0.jar" />
			<include name="json.jar" />
			<include name="snakeyaml.jar" />
		</fileset>
	</path>
	
	<path id="junit-classpath">
		<fileset dir="res" >
			<include name="junit-4.9b3.jar"/>
		</fileset>
	</path>
	
	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask"
	           			   classpath="../_resources/closure-compiler/compiler.jar"/>
	
	<!--- + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
		HELP
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + -->
	<target name="help">
		<echo>
See readme for time being please.
		</echo>
	</target>
	
	<!--- + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
		BUILD
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + -->
	<target name="build">

		<buildnumber file="res/build_number"/>
		
		<mkdir dir="${build}" />
		<delete dir="${bin}" />
		<mkdir dir="${bin}" />

		<copy todir="${src}-versioned">
			<fileset dir="${src}" />
		</copy>

		<replaceregexp file="${src}-versioned/org/piecemaker/api/PieceMakerApi.java" flags="g"
  					   match="##build##" replace="${build.number}" />
		<replaceregexp file="${src}-versioned/org/piecemaker/api/PieceMakerApi.java" flags="g"
  					   match="##version##" replace="${version}" />
		
		<javac srcdir="${src}-versioned" destdir="${bin}" source="${java.target.version}">
			<classpath>
				<path refid="library-classpath"/>
			</classpath>
		</javac>

		<delete dir="${src}-versioned" />
		
	</target>
	
	<!--- + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
		PACK
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + -->
	<target name="package" depends="build">
		
		<delete dir="${dist}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${dist}/${lib.name}/library" />
		
		<jar jarfile="${dist}/${lib.name}/library/${lib.name}.jar" basedir="${bin}" />

		<copy todir="${dist}/${lib.name}/library/">
			<path refid="library-classpath" />
		</copy>

		<copy todir="${dist}/${lib.name}/examples">
			<dirset dir="examples" />
		</copy>
		
		<mkdir dir="${dist}/${lib.name}/${docs}" />
		<javadoc bottom="${lib.name}, vers. ${version} - build #${build.number}, by ${author} for ${client}. ${copyright}"
				 public="true" version="false" destdir="${dist}/${lib.name}/${docs}" verbose="false" 
				 stylesheetfile="res/stylesheet.css" 
				 doctitle="${lib.name} #${version}-${build.number} Java documentation" 
				 windowtitle="${lib.name} #${version}-${build.number} Java documentation">
			<fileset dir="${src}" defaultexcludes="yes">
				<include name="**/*"/>
			</fileset>
			<classpath>
				<path refid="library-classpath" />
				<path refid="junit-classpath" />
			</classpath>
		</javadoc>

		<!-- PACKAGE JavaScript FILES -->
		
		<concat destfile="${bin}/${lib.name}.js">
			<fileset file="src-js/*.js" />
		</concat>
		
		<jscomp compilationLevel="simple" warning="default" 
		        debug="false" output="${bin}/${lib.name}-compiled.js">
			<sources dir="${bin}">
				<file name="${lib.name}.js" />
			</sources>
		</jscomp>

		<concat destfile="${dist}/${lib.name}/library/${lib.name}.js">
			<fileset file="res/js-header.js" />
			<fileset file="${bin}/${lib.name}-compiled.js" />
		</concat>

		<replaceregexp file="${dist}/${lib.name}/library/${lib.name}.js" flags="g"
  					   match="##build##" replace="${build.number}" />
		<replaceregexp file="${dist}/${lib.name}/library/${lib.name}.js" flags="g"
  					   match="##version##" replace="${version}" />
	</target>
	
	<!--- + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
		INSTALL
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + -->
	<target name="install" depends="package" >
		
		<delete dir="${processing.libs}/${lib.name}" />
		<mkdir dir="${processing.libs}/${lib.name}" />
		
		<copy todir="${processing.libs}/${lib.name}">
			<fileset dir="${dist}" />
		</copy>

		<zip destfile="releases/${lib.name}-${version}.zip"
	  	     basedir="${dist}"
	  	     excludes="**/_DS.Store"
		/>
		
	</target>
	
	<!--- + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
		CLEAN
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + -->
	<target name="clean" >

		<delete dir="${processing.libs}/${lib.name}" />
		<delete dir="${dist}" />
		<delete dir="${bin}" />

	</target>

	
	<!--- + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
		TEST
	+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + -->
	<target name="test" depends="build">
	</target>
</project>

